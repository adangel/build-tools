<?xml version="1.0"?>
<ruleset name="dogfood" 
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>Rules to check PMD itself.</description>

    <!--
    Note: Eventually, this ruleset should include all rules and exclude those,
    which we know are explicitly decided as not applicable to PMD itself.
    This is the most encompassing form of RuleSet.
    
    For starting, we add rule by rule and use an incremental approach.
    See [#361](https://github.com/pmd/pmd/issues/361).
    
    The original dogfood ruleset is available at:
    https://github.com/pmd/pmd/blob/master/pmd-core/src/main/resources/rulesets/internal/dogfood.xml
     -->

    <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
    <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable" />
    <rule ref="category/java/errorprone.xml/EmptyCatchBlock" />

    <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
    <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
    <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
    <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
    <rule ref="category/java/errorprone.xml/BrokenNullCheck" />
    <rule ref="category/java/errorprone.xml/CheckSkipResult" />
    <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
    <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
    <rule ref="category/java/errorprone.xml/JumbledIncrementer" />
    <rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
    <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
    <rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />

    <rule ref="category/java/multithreading.xml/AvoidThreadGroup" />
    <rule ref="category/java/multithreading.xml/DontCallThreadRun" />
    <rule ref="category/java/multithreading.xml/DoubleCheckedLocking" />

    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
    <rule ref="category/java/bestpractices.xml/CheckResultSet" />

    <rule ref="category/java/codestyle.xml/ExtendsObject" />
    <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />

    <rule ref="category/java/performance.xml/BigIntegerInstantiation" />
    <rule ref="category/java/performance.xml/BooleanInstantiation" />

    <rule ref="category/java/design.xml/SimplifiedTernary" />

    <rule ref="category/java/codestyle.xml/ForLoopsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/IfStmtsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/WhileLoopsMustUseBraces" />

    <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic" />
    <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable" />
    <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName" />
    <rule ref="category/java/errorprone.xml/CloneThrowsCloneNotSupportedException" />
    <rule ref="category/java/errorprone.xml/ProperCloneImplementation" />

<!--
    Disabled rules:

    <rule ref="category/java/design.xml/CollapsibleIfStatements" />
 -->
</ruleset>